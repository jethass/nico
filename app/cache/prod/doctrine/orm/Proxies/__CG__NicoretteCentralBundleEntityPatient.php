<?php

namespace Proxies\__CG__\Nicorette\CentralBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Patient extends \Nicorette\CentralBundle\Entity\Patient implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'janrainId', 'status', 'token', 'createdAt', 'updatedAt', 'expiredAt', 'quizAnswers', 'patientEconomys', 'judgments', 'contacts', 'contracts', 'pointHistories', '' . "\0" . 'Nicorette\\CentralBundle\\Entity\\Patient' . "\0" . 'club_alerts', '' . "\0" . 'Nicorette\\CentralBundle\\Entity\\Patient' . "\0" . 'johnson_alerts');
        }

        return array('__isInitialized__', 'id', 'janrainId', 'status', 'token', 'createdAt', 'updatedAt', 'expiredAt', 'quizAnswers', 'patientEconomys', 'judgments', 'contacts', 'contracts', 'pointHistories', '' . "\0" . 'Nicorette\\CentralBundle\\Entity\\Patient' . "\0" . 'club_alerts', '' . "\0" . 'Nicorette\\CentralBundle\\Entity\\Patient' . "\0" . 'johnson_alerts');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Patient $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setJanrainId($janrainId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJanrainId', array($janrainId));

        return parent::setJanrainId($janrainId);
    }

    /**
     * {@inheritDoc}
     */
    public function getJanrainId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJanrainId', array());

        return parent::getJanrainId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken($token)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', array($token));

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getToken()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', array());

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpiredAt($expiredAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpiredAt', array($expiredAt));

        return parent::setExpiredAt($expiredAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpiredAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpiredAt', array());

        return parent::getExpiredAt();
    }

    /**
     * {@inheritDoc}
     */
    public function addQuizAnswer($quizAnswer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addQuizAnswer', array($quizAnswer));

        return parent::addQuizAnswer($quizAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function removeQuizAnswer($quizAnswer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeQuizAnswer', array($quizAnswer));

        return parent::removeQuizAnswer($quizAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuizAnswers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuizAnswers', array());

        return parent::getQuizAnswers();
    }

    /**
     * {@inheritDoc}
     */
    public function addContract($contract)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContract', array($contract));

        return parent::addContract($contract);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContract($contract)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContract', array($contract));

        return parent::removeContract($contract);
    }

    /**
     * {@inheritDoc}
     */
    public function getContracts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContracts', array());

        return parent::getContracts();
    }

    /**
     * {@inheritDoc}
     */
    public function addContact($contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContact', array($contact));

        return parent::addContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContact($contact)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContact', array($contact));

        return parent::removeContact($contact);
    }

    /**
     * {@inheritDoc}
     */
    public function getContacts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContacts', array());

        return parent::getContacts();
    }

    /**
     * {@inheritDoc}
     */
    public function addPointHistory($pointHistory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPointHistory', array($pointHistory));

        return parent::addPointHistory($pointHistory);
    }

    /**
     * {@inheritDoc}
     */
    public function removePointHistory($pointHistory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePointHistory', array($pointHistory));

        return parent::removePointHistory($pointHistory);
    }

    /**
     * {@inheritDoc}
     */
    public function getPointHistories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPointHistories', array());

        return parent::getPointHistories();
    }

    /**
     * {@inheritDoc}
     */
    public function isClubAlerts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isClubAlerts', array());

        return parent::isClubAlerts();
    }

    /**
     * {@inheritDoc}
     */
    public function setClubAlerts($club_alerts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClubAlerts', array($club_alerts));

        return parent::setClubAlerts($club_alerts);
    }

    /**
     * {@inheritDoc}
     */
    public function isJohnsonAlerts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isJohnsonAlerts', array());

        return parent::isJohnsonAlerts();
    }

    /**
     * {@inheritDoc}
     */
    public function setJohnsonAlerts($johnson_alerts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJohnsonAlerts', array($johnson_alerts));

        return parent::setJohnsonAlerts($johnson_alerts);
    }

    /**
     * {@inheritDoc}
     */
    public function addJudgment($judgment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addJudgment', array($judgment));

        return parent::addJudgment($judgment);
    }

    /**
     * {@inheritDoc}
     */
    public function removeJudgment($judgment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeJudgment', array($judgment));

        return parent::removeJudgment($judgment);
    }

    /**
     * {@inheritDoc}
     */
    public function getJudgments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgments', array());

        return parent::getJudgments();
    }

    /**
     * {@inheritDoc}
     */
    public function addPatientEconomy($patientEconomy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPatientEconomy', array($patientEconomy));

        return parent::addPatientEconomy($patientEconomy);
    }

    /**
     * {@inheritDoc}
     */
    public function removePatientEconomy($patientEconomy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePatientEconomy', array($patientEconomy));

        return parent::removePatientEconomy($patientEconomy);
    }

    /**
     * {@inheritDoc}
     */
    public function getPatientEconomys()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPatientEconomys', array());

        return parent::getPatientEconomys();
    }

    /**
     * {@inheritDoc}
     */
    public function setData($request, $uuid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', array($request, $uuid));

        return parent::setData($request, $uuid);
    }

}
